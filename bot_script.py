import os
import requests
import google.generativeai as genai
import google.api_core.exceptions

# --- 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API-–∫–ª—é—á–µ–π –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ ---
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ Gemini
try:
    genai.configure(api_key=GEMINI_API_KEY)
    model = genai.GenerativeModel('gemini-1.5-flash')
    print("–ú–æ–¥–µ–ª—å Gemini —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞: gemini-1.5-flash")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Gemini API: {e}")
    if BOT_TOKEN and CHANNEL_ID:
        try:
            telegram_url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
            requests.post(telegram_url, json={"chat_id": CHANNEL_ID, "text": f"‚ùå –ë–æ—Ç: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Gemini API: {e}"})
        except:
            pass # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏
    exit(1)

# --- 2. –°–ø–∏—Å–æ–∫ –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞ –∏ –∏—Ö —Å–º–∞–π–ª–∏–∫–∏ ---
zodiac_signs_with_emojis = {
    "–û–≤–µ–Ω": "‚ôà",
    "–¢–µ–ª–µ—Ü": "‚ôâ",
    "–ë–ª–∏–∑–Ω–µ—Ü—ã": "‚ôä",
    "–†–∞–∫": "‚ôã",
    "–õ–µ–≤": "‚ôå",
    "–î–µ–≤–∞": "‚ôç",
    "–í–µ—Å—ã": "‚ôé",
    "–°–∫–æ—Ä–ø–∏–æ–Ω": "‚ôè",
    "–°—Ç—Ä–µ–ª–µ—Ü": "‚ôê",
    "–ö–æ–∑–µ—Ä–æ–≥": "‚ôë",
    "–í–æ–¥–æ–ª–µ–π": "‚ôí",
    "–†—ã–±—ã": "‚ôì"
}

# --- 3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞–∫–∞ ---
print("–ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏ –æ—Ç–ø—Ä–∞–≤–∫—É –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤ –¥–ª—è –≤—Å–µ—Ö –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞...")

for sign, emoji in zodiac_signs_with_emojis.items():
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–Ω–∞–∫–∞
    horoscope_prompt = f"""
    –¢—ã - –º—É–¥—Ä—ã–π –∞—Å—Ç—Ä–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø.

¬† ¬† –ù–∞–ø–∏—à–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ "{sign}".

¬† ¬† –û–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:

¬† ¬† - –û–±–µ—â–∞—é—â–∏–º –ø–æ–∑–∏—Ç–∏–≤.

¬† ¬† - –ò–º–µ—Ç—å –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ç–µ–∫—Å—Ç

¬† ¬† - –°–æ–¥–µ—Ä–∂–∞—Ç—å –æ–¥–∏–Ω-–¥–≤–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–æ–≤–µ—Ç–∞ –Ω–∞ –¥–µ–Ω—å.

¬† ¬† - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫—É—é –ª–µ–∫—Å–∏–∫—É –ø—Ä–∏—Å—É—â–Ω—É—é –¥–ª—è –∞—Å—Ç—Ä–æ–ª–æ–≥–æ–≤

¬† ¬† - –ù–∞—á–∏–Ω–∞—Ç—å—Å—è —Å—Ä–∞–∑—É —Å —Ç–µ–∫—Å—Ç–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ (–±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–∏–ø–∞ "–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è ...").

¬† ¬† - –ü–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
    """

    try:
        print(f"–ü–æ–ø—ã—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –¥–ª—è {sign}...")
        gemini_response = model.generate_content(horoscope_prompt)
        generated_horoscope = gemini_response.text

        # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –∑–≤–µ–∑–¥–æ—á–∫–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ Gemini –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤ –Ω–∞—á–∞–ª–æ/–∫–æ–Ω–µ—Ü
        # –≠—Ç–æ –Ω–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∞ –æ—á–∏—Å—Ç–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        generated_horoscope = generated_horoscope.strip('*').strip()

        print(f"–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω Gemini.")

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        telegram_url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"

        # –í HTML-—Ä–µ–∂–∏–º–µ –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º <b></b>
        # –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤ –≤ HTML-—Ç–µ–∫—Å—Ç–µ,
        # –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Ç–µ–≥–∞–º–∏, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å entity-–∫–æ–¥—ã (&amp; &lt; &gt; –∏ —Ç.–¥.)
        # –ù–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, —ç—Ç–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è,
        # –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä—è–º—ã—Ö HTML-—Ç–µ–≥–æ–≤ –∏–ª–∏ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.
        message_text = (
            f"{emoji} –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è <b>{sign}</b> –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
            f"{generated_horoscope}\n\n"
            f"üí´ –ù–∞–¥–µ–µ–º—Å—è, –¥–µ–Ω—å –ø—Ä–∏–Ω–µ—Å–µ—Ç –≤–∞–º —É–¥–∞—á—É!"
        )

        telegram_payload = {
            "chat_id": CHANNEL_ID,
            "text": message_text,
            "parse_mode": "HTML" # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ HTML –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        }

        print(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –¥–ª—è {sign} –≤ Telegram...")
        telegram_response = requests.post(telegram_url, json=telegram_payload)
        telegram_response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä–∏—Ç –æ—à–∏–±–∫–∏ HTTP

        print(f"–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")

    except google.api_core.exceptions.GoogleAPICallError as e:
        print(f"–û—à–∏–±–∫–∞ Google API –¥–ª—è {sign}: {e}")
        error_message_tg = f"‚ùå –û—à–∏–±–∫–∞ Google API –¥–ª—è <b>{sign}</b>: {e}"
        try:
            requests.post(telegram_url, json={"chat_id": CHANNEL_ID, "text": error_message_tg, "parse_mode": "HTML"})
        except Exception as tg_err:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ Telegram: {tg_err}")

    except requests.exceptions.HTTPError as http_err:
        print(f"HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram –¥–ª—è {sign}: {http_err}")
        error_message_tg = f"‚ùå HTTP –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram –¥–ª—è <b>{sign}</b>: {http_err}"
        try:
            requests.post(telegram_url, json={"chat_id": CHANNEL_ID, "text": error_message_tg, "parse_mode": "HTML"})
        except Exception as tg_err:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ Telegram: {tg_err}")

    except requests.exceptions.RequestException as req_err:
        print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ (Telegram) –¥–ª—è {sign}: {req_err}")
        error_message_tg = f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ Telegram –¥–ª—è <b>{sign}</b>: {req_err}"
        try:
            requests.post(telegram_url, json={"chat_id": CHANNEL_ID, "text": error_message_tg, "parse_mode": "HTML"})
        except Exception as tg_err:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ Telegram: {tg_err}")

    except Exception as e:
        print(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è {sign}: {e}")
        error_message_tg = f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è <b>{sign}</b>: {e}"
        try:
            requests.post(telegram_url, json={"chat_id": CHANNEL_ID, "text": error_message_tg, "parse_mode": "HTML"})
        except Exception as tg_err:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ Telegram: {tg_err}")

print("\n–ü—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤ –¥–ª—è –≤—Å–µ—Ö –∑–Ω–∞–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω.")
